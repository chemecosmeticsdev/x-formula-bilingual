version: 1
applications:
  - frontend:
      phases:
        preBuild:
          commands:
            - echo "Installing dependencies..."
            - npm ci
            - echo "Validating environment variables..."
            - echo "NODE_ENV=$NODE_ENV"
            - echo "LAMBDA_BEDROCK_ENDPOINT=$LAMBDA_BEDROCK_ENDPOINT"
            - echo "LAMBDA_BEDROCK_IMAGE_ENDPOINT=$LAMBDA_BEDROCK_IMAGE_ENDPOINT"
            - echo "Available environment variables:"
            - env | grep -E "(LAMBDA|BEDROCK)" || echo "No LAMBDA/BEDROCK variables found"
        build:
          commands:
            - echo "Building Next.js application..."
            # Write Amplify environment variables to .env.local for Next.js runtime access
            # Next.js loads .env.local by default in all environments
            - echo "LAMBDA_BEDROCK_ENDPOINT=$LAMBDA_BEDROCK_ENDPOINT" >> .env.local
            - echo "LAMBDA_BEDROCK_IMAGE_ENDPOINT=$LAMBDA_BEDROCK_IMAGE_ENDPOINT" >> .env.local
            - echo "BEDROCK_ACCESS_KEY_ID=$BEDROCK_ACCESS_KEY_ID" >> .env.local
            - echo "BEDROCK_SECRET_ACCESS_KEY=$BEDROCK_SECRET_ACCESS_KEY" >> .env.local
            - echo "BEDROCK_REGION=$BEDROCK_REGION" >> .env.local
            - echo "AI_IMAGE_GENERATION_ENDPOINT=$AI_IMAGE_GENERATION_ENDPOINT" >> .env.local
            # Also write to .env.production for completeness
            - echo "LAMBDA_BEDROCK_ENDPOINT=$LAMBDA_BEDROCK_ENDPOINT" >> .env.production
            - echo "LAMBDA_BEDROCK_IMAGE_ENDPOINT=$LAMBDA_BEDROCK_IMAGE_ENDPOINT" >> .env.production
            - echo "BEDROCK_ACCESS_KEY_ID=$BEDROCK_ACCESS_KEY_ID" >> .env.production
            - echo "BEDROCK_SECRET_ACCESS_KEY=$BEDROCK_SECRET_ACCESS_KEY" >> .env.production
            - echo "BEDROCK_REGION=$BEDROCK_REGION" >> .env.production
            - echo "AI_IMAGE_GENERATION_ENDPOINT=$AI_IMAGE_GENERATION_ENDPOINT" >> .env.production
            # Verify environment variables are written
            - echo "Environment variables written to .env.local:"
            - cat .env.local || echo ".env.local not found, continuing build"
            - echo "Environment variables written to .env.production:"
            - cat .env.production || echo ".env.production not found, continuing build"
            - npm run build
            - echo "Build completed successfully!"
        postBuild:
          commands:
            - echo "Running post-build optimizations..."
            - echo "Analyzing bundle size..."
            - npx --yes next-bundle-analyzer || echo "Bundle analysis optional"
      artifacts:
        baseDirectory: .next
        files:
          - '**/*'
      cache:
        paths:
          - node_modules/**/*
          - .next/cache/**/*
env:
  variables:
    # Build-time variables
    NODE_ENV: production
    NEXT_PUBLIC_APP_NAME: "X Formula Platform"
    NEXT_PUBLIC_APP_VERSION: "2.0.0"
    NEXT_PUBLIC_FORCE_HTTPS: "true"
    NEXT_PUBLIC_SECURITY_HEADERS: "true"
    NEXT_PUBLIC_CDN_ENABLED: "true"
    NEXT_PUBLIC_IMAGE_OPTIMIZATION: "true"
    NEXT_PUBLIC_ANALYTICS_ENABLED: "true"
    BUILD_STANDALONE: "true"
    OUTPUT_FILE_TRACING: "true"
    EXPERIMENTAL_APP_DIR: "true"
  # Runtime environment variables (set in Amplify Console)
  # LAMBDA_BEDROCK_ENDPOINT: Set in Amplify Console Environment Variables
  # LAMBDA_BEDROCK_IMAGE_ENDPOINT: Set in Amplify Console Environment Variables
  # BEDROCK_ACCESS_KEY_ID: Set in Amplify Console Environment Variables
  # BEDROCK_SECRET_ACCESS_KEY: Set in Amplify Console Environment Variables
  # BEDROCK_REGION: Set in Amplify Console Environment Variables